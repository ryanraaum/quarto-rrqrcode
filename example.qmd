---
title: "`rrqrcode`"
format:
    html: 
        embed-resources: true
---

`{{{< rrqr https://quarto.org >}}}`

{{< rrqr https://quarto.org >}}

### All arguments

`rrqr data [id] [named=value]`

#### Positional arguments

`rrqr data [id]`

argument|description
--------|-----------
`data` | information to be encoded in QR code 
`id` | (optional) unique identifier; default = `rrqr1`, `rrqr2`, `...`, `rrqrN` 


#### Optional named arguments

argument|description|value
--------|-----------|-----
`size(=100)` | size of one side of QR code square | in pixels
`class(=qrcode)`| html class attribute| 
`fgcolor(=#000000)`, `bgcolor(=#FFFFFF)`, `fpcolor(=#000000)` | foreground, background, and fixed pattern colors| 3 or 6 character hex color
`fgalpha(=1)`, `bgalpha(=0)`, `fpalpha(=1)` | foreground, background, and fixed alpha transparency| 0 (transparent) to 1 (opaque) 

## Size

100 pixels is the default size, but this can be adjusted.

`{{{< rrqr https://quarto.org size=200 >}}}`

{{< rrqr https://quarto.org size=200 >}}

## Colors

Change the main foreground color.

`{{{< rrqr https://quarto.org fgcolor=#006DFF >}}}`

{{< rrqr https://quarto.org fgcolor=#006DFF >}}

The positioning and alignment fixed patterns of the QR Code can be colored separately from the other foreground elements.

`{{{< rrqr https://quarto.org fgcolor=#006DFF fpcolor=#000080 >}}}`

{{< rrqr https://quarto.org fgcolor=#006DFF fpcolor=#000080 >}}

## Transparency

::: {style="background-color: #006DFF"}

The background is fully transparent by default.

`{{{< rrqr https://quarto.org >}}}`

{{< rrqr https://quarto.org >}}

Any change to the background color renders it fully opaque.

`{{{< rrqr https://quarto.org bgcolor=#FFFFFF >}}}`

{{< rrqr https://quarto.org bgcolor=#FFFFFF >}}

The alpha level of each of the color groups can be set independently.

`{{{< rrqr https://quarto.org bgalpha=0.5 >}}}`

{{< rrqr https://quarto.org bgalpha=0.5 >}}


:::

## HTML Styling

::: {.just-here}

For HTML-based formats, the class `qrcode` is assigned by default and can be used for styling.

<style>
.just-here .qrcode {
    display: block; 
    margin: 0 auto;
}
.just-here .rotated {
    transform: rotate(45deg);
}

</style>

```css
.qrcode {
    display: block; 
    margin: 0 auto;
}
```

{{< rrqr https://quarto.org >}}

Additional classes can be applied for styling. If you wish to retain the `qrcode` class, it must be included if other classes are added.

```css
.rotated {
    transform: rotate(45deg);
}
```
`{{{< rrqr https://quarto.org class="qrcode rotated" >}}}`

<br/>

{{< rrqr https://quarto.org class="qrcode rotated" >}}

:::



